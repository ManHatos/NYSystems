// latest as of 21/02/2024

// by choice, datastore's design does not utilise prisma ORM-level relations with mongoDB
// prisma sucks.

datasource db {
    provider = "mongodb"
    url      = ""
}

generator client {
    provider = "prisma-client-js"
}

// NEXUS

// nexus is the system responsible for handling users and registration
// data models used by nexus contain data for all users within the New York State Roleplay server

// currently, a user may be of 2 possible types:
//  - guest: a user that has been automatically created following any interaction with the system
//  - registered: a user that has manually completed the registration flow
// this is indicated by the `type` field

// nexus user data

type NexusRegistrationData {
    type      Int
    registrar Int?
}

type NexusLinkedData {
    discord BigInt?
    roblox  Int?
}

type NexusNoteData {
    message   String
    createdAt DateTime @default(now())
}

model User {
    id           String                @id @default(auto()) @map("_id") @db.ObjectId
    name         String
    flags        Int[]                 @default([])
    note         NexusNoteData?
    registration NexusRegistrationData
    linked       NexusLinkedData
    createdAt    DateTime              @default(now())

    @@map("NexusUsers")
}

// SENTINEL

// sentinel is the system responsible for user management and other moderation purposes
// data models used by sentinel contain data relating to user moderation

type SentinelEditData {
    editor   String // a nexus user id
    editedAt DateTime @default(now())
}

// sentinel record data

type SentinelRecordInfoData {
    user   String // a nexus user id
    reason String
    action Int
}

model Record {
    id        BigInt                 @id @map("_id")
    type      Int                    @default(0) // a record type for future expansion
    author    String // a nexus user id
    edits     SentinelEditData[]
    info      SentinelRecordInfoData
    createdAt DateTime               @default(now())

    @@map("SentinelRecords")
}

// sentinel ban request data

type SentinelBanRequestInfoData {
    user   String // a nexus user id
    reason String
    state  Int    @default(0)
}

model BanRequest {
    id        BigInt                     @id @map("_id")
    author    String // a nexus user id
    edits     SentinelEditData[]
    info      SentinelBanRequestInfoData
    createdAt DateTime                   @default(now())

    @@map("SentinelBanRequests")
}
